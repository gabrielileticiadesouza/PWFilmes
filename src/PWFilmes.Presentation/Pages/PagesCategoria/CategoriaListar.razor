@page "/categoria/listar"
@inject HttpClient Http
@inject NavigationManager NavigationManager

@inject DialogService DialogService

@using System.Text.Json
@using PWFilmes.Domain

<h3>Categorias</h3>

<RadzenDialog/>

<RadzenButton 
    Icon="add"
    ButtonStyle="ButtonStyle.Primary"
    Text="Nova Categoria"
    Click="NovaCategoria"
    class="rz-mb-4 rz-border-radius-10"          
              />

<RadzenDataGrid
     AllowFiltering="true" 
     AllowColumnResize="true" 
     AllowAlternatingRows="true" 
     FilterMode="FilterMode.Advanced"
     AllowSorting="true"
     PageSize="5" 
     AllowPaging="true" 
     PagerHorizontalAlign="HorizontalAlign.Left"
     ShowPagingSummary="true"
     Data="@categorias"
     TItem="Categoria" 
     ColumnWidth="300px" 
     LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="Categoria" Property="Codigo" Title="Código" Width="100px" />
        <RadzenDataGridColumn TItem="Categoria" Property="Descricao" Title="Descrição"/>
        <RadzenDataGridColumn TItem="Categoria" Property="Cor" Title="Cor" Width="80px">
            <Template Context="data">
                <RadzenColorPicker @bind-Value=@data.Cor Style="width: 100%" Disabled />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn
            TItem="Categoria"
            Filterable="false"
            Sortable="false"
            Title="Ações"
            TextAlign="TextAlign.Center"
            Width="50px">
            <Template Context="data">
                <RadzenStack
                            Orientation="Orientation.Horizontal"
                            JustifyContent="JustifyContent.Center">
                     <RadzenButton
                                  Icon="edit"
                                  ButtonStyle="ButtonStyle.Primary"
                                  class="rz-border-radius-10"/>
                    <RadzenButton Icon="delete_forever"
                                  ButtonStyle="ButtonStyle.Danger"
                                  class="rz-border-radius-10"
                                  Click="() => RemoverCategoria(data.Codigo)"/>
                                  
                </RadzenStack>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    List<Categoria> categorias = new List<Categoria>();

    protected override async Task OnInitializedAsync() //preciso usar o "async" no método p/ o .NET conseguir ler
    {
        var response = await Http.GetAsync("api/Categoria/listar"); //preciso usar o "async" quando for usar "await" e vice-versa

        var content = await response.Content.ReadAsStringAsync();

        var options = new JsonSerializerOptions{ PropertyNameCaseInsensitive = true };

        categorias = JsonSerializer.
            Deserialize<List<Categoria>>(content, options);
    }

    public void NovaCategoria()
    {
        NavigationManager.NavigateTo("categoria-nova");
    }

    public async Task RemoverCategoria(int codigoCategoria)
    {
        var retorno = await
            DialogService.Confirm($"Deseja excluir a categoria de código {codigoCategoria}",
            "PWFilmes",
            new ConfirmOptions()
            {
                OkButtonText = "Sim",
                CancelButtonText = "Não"
            });

        if (retorno is true)
        {
            await Http.DeleteAsync($"api/Categoria/excluir/{codigoCategoria}");
        }
    }

}
